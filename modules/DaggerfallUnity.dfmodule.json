{
    "displayName": "DaggerfallUnity",
    "conditions": [
        {
            "summary": "Triggers when player readies a spell containing a single specific effect.",
            "overloads": [
                "cast ${1:effectKey} effect do ${2:task}"
            ],
            "sourceName": "CastEffectDo"
        },
        {
            "summary": [
                "Triggers when the player character clicks on a foe.",
                "Triggers when the player character clicks on a foe and shows a message.",
                "Triggers when the player character clicks on a foe and the required amount of gold can be deducted, otherwise a different task is triggered."
            ],
            "overloads": [
                "clicked foe ${1:_foe_}",
                "clicked foe ${1:_foe_} say ${2:message}",
                "clicked ${1:_foe_} and at least ${2:nn} gold otherwise do ${3:task}"
            ],
            "sourceName": "ClickedFoe"
        },
        {
            "summary": "Starts target task if the required amount of gold can be deducted, otherwise a different task is triggered.",
            "overloads": [
                "pay ${1:nn} money do ${2:task} otherwise do ${3:task}"
            ],
            "sourceName": "PayMoney"
        },
        {
            "summary": "Triggers when character reaches minimum value for specified attribute.",
            "overloads": [
                "when attribute ${1:attributeName} is at least ${2:nn}"
            ],
            "sourceName": "WhenAttributeLevel"
        },
        {
            "summary": "Triggers when player enters/exits a certain location area.",
            "overloads": [
                "when pc ${1|enters,exits|} ${2:locationType}"
            ],
            "sourceName": "WhenPcEntersExits"
        },
        {
            "summary": "Triggers when player has reached specified skill level or higher.",
            "overloads": [
                "when skill ${1:skillName} is at least ${2:nn}"
            ],
            "sourceName": "WhenSkillLevel"
        },
        {
            "summary": "Triggers when the current time is in the specified season.",
            "overloads": [
                "season ${1:season}"
            ],
            "sourceName": "Season"
        },
        {
            "summary": "Triggers when the current weather is as specified.",
            "overloads": [
                "weather ${1:weather}"
            ],
            "sourceName": "Weather"
        },
        {
            "summary": "Triggers when the player is in a location with the specified climate.",
            "overloads": [
                "climate ${1:climate}",
                "climate base ${1:baseClimate}"
            ],
            "sourceName": "Climate"
        },
        {
            "summary": [ 
                "Continuously checks if player character is at any building of the specified type and starts or clears target task; set and do are equivalent.",
                "Continuously checks if player character is at any building of the specified type and starts or clears target task; set and do are equivalent. A message is shown only once after a positive check."
            ],
            "overloads": [
                "pc at any ${1:localRemotePlace} ${2|set,do|} ${3:task}",
                "pc at any ${1:localRemotePlace} ${2|set,do|} ${3:task} saying ${4:messageID}"
            ],
            "sourceName": "PcAt"
        },
        {
            "summary": "Shows _QuestComplete_ success message and trains the player in the specified skill, just like the Training service.",
            "overloads": [
                "train pc ${1:skillName}"
            ],
            "sourceName": "TrainPc"
        }
    ],
    "actions": [
        {
            "summary": "Changes whether or not a quest foe is attackable by other NPCs.",
            "overloads": [
                "change foe ${1:_foe_} infighting ${2:bool}"
            ],
            "sourceName": "ChangeFoeInfighting"
        },
        {
            "summary": "Changes a foe's team.",
            "overloads": [
                "change foe ${1:_foe_} team ${2:nn}",
                "change foe ${1:_foe_} team ${2:teamName}"
            ],
            "sourceName": "ChangeFoeTeam"
        },
        {
            "summary": "Makes all foes hostile, or clears (removes) them all.",
            "overloads": [
                "enemies ${1|makehostile,clear|}"
            ],
            "sourceName": "Enemies"
        },
        {
            "summary": "Adds a text entry to the player journal as a note.",
            "overloads": [
                "journal note ${1:messageID}"
            ],
            "sourceName": "JournalNote"
        },
        {
            "summary": "Kills a specified foe instantly",
            "overloads": [
                "kill foe ${1:_foe_}"
            ],
            "sourceName": "KillFoe"
        },
        {
            "summary": "Take an amount from player, and start a task depending on if they could pay.",
            "overloads": [
                "pay ${1:nn} money do ${2:task} otherwise do ${3:task}"
            ],
            "sourceName": "PayMoney"
        },
        {
            "summary": "Plays a song from MIDI.BSA using SongFiles enum.",
            "overloads": [
                "play song ${1:song}"
            ],
            "sourceName": "PlaySong"
        },
        {
            "summary": "Starts another quest and waits for its termination, then sets task for success or failure. Sets failure task immediately if target quest is not found. Will ensure that target quest is also terminated if still running when parent quest ends.",
            "overloads": [
                "run quest ${1:questName} then ${2:task} or ${3:task}"
            ],
            "sourceName": "RunQuest"
        },
        {
            "summary": "Sets a player's crime.",
            "overloads": [
                "setplayercrime ${1:crime}"
            ],
            "sourceName": "SetPlayerCrime"
        },
        {
            "summary": "Sets a variable. Can be unset with **_clear_**.",
            "overloads": [
                "setvar ${1:task}"
            ],
            "sourceName": "StartTask"
        },
        {
            "summary": "Spawns city guards using `PlayerEntity.SpawnCityGuards()`.",
            "overloads": [
                "spawncityguards",
                "spawncityguards immediate"
            ],
            "sourceName": "SpawnCityGuards"
        },
        {
            "summary": "Unrestrains a foe restrained by RestrainFoe.",
            "overloads": [
                "unrestrain foe ${1:_foe_}"
            ],
            "sourceName": "UnrestrainFoe"
        },
        {
            "summary": "Updates the world data system to use a specific variant for a given place (location, block, building) either for all instances or for a particular location. Specify a single dash for variant to remove any existing variant.",
            "overloads": [
                "worldupdate location at ${1:nn} in region ${2:nn} variant ${3:variant}",
                "worldupdate locationnew named ${1:locationName} in region ${2:nn} variant ${3:variant}",
                "worldupdate block ${1:blockName} at ${2:nn} in region ${3:nn} variant ${4:variant}",
                "worldupdate blockAll ${1:blockName} variant ${2:variant}",
                "worldupdate building ${1:blockName} ${2:nn} at ${3:nn} in region ${4:nn} variant ${5:variant}",
                "worldupdate buildingAll ${1:blockName} ${2:nn} variant ${3:variant}"
            ],
            "sourceName": "WorldUpdate"
        }
    ],
    "effects": [
        "MageLight-Inferno",
        "MageLight-Rime",
        "MageLight-Venom",
        "MageLight-Storm",
        "MageLight-Arcane"
    ]
}